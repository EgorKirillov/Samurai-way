{"version":3,"file":"static/js/2.c89feacd.chunk.js","mappings":"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","sources":["hoc/withAuthRedirect.tsx","webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogsItms/DialogItems.tsx","components/Dialogs/Messages/Mesages.tsx","components/Dialogs/Messages/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","assets/avatar|sync|/^/.*$"],"sourcesContent":["import React from 'react'\r\nimport { ComponentType } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useAppSelector } from '../Redux/hooks'\r\n\r\nexport const withAuthRedirect = <T,>(Component: ComponentType<T>) => {\r\n  return (props: T) => {\r\n    const isAuth = useAppSelector(state => state.auth.isAuth)\r\n    if (!isAuth) return <Redirect to={'/login'} />\r\n    return <Component {...props} />\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__kSZmH\",\"dialogList\":\"Dialogs_dialogList__BJtct\",\"dialogListActive\":\"Dialogs_dialogListActive__vqn+o\",\"dialog\":\"Dialogs_dialog__IEoSN\",\"activeDialog\":\"Dialogs_activeDialog__kVFIf\",\"messageList\":\"Dialogs_messageList__Hv8b3\",\"message\":\"Dialogs_message__dbkiW\"};","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport s from './../Dialogs.module.css'\nimport { DialogItemTypes } from '../../../Redux/dialogsReducer'\n\nexport const DialogItem = (props: DialogItemTypes) => {\n  return (\n    <div className={s.dialog}>\n      <img\n        src={require('../../../assets/avatar/' + props.avatarLink)}\n        alt={'avatar' + props.avatarLink}\n      />\n      <NavLink to={'/dialogs/' + props.linkID} activeClassName={s.dialogListActive}>\n        {' '}\n        {props.userName}{' '}\n      </NavLink>\n    </div>\n  )\n}\n","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport { MessageTypes } from '../../../Redux/dialogsReducer'\r\n\r\nexport const Message = (props: MessageTypes) => {\r\n  return <div className={s.message}>{props.messageText}</div>\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Avatar, Button, Comment, Form, Input, List } from 'antd'\r\nimport moment from 'moment'\r\nimport { useAppSelector } from '../../../Redux/hooks'\r\n\r\nconst { TextArea } = Input\r\n\r\ninterface CommentItem {\r\n  author: string\r\n  avatar: string\r\n  content: React.ReactNode\r\n  datetime: string\r\n}\r\n\r\ninterface EditorProps {\r\n  onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void\r\n  onSubmit: () => void\r\n  submitting: boolean\r\n  value: string\r\n}\r\n\r\nconst CommentList = ({ comments }: { comments: CommentItem[] }) => (\r\n  <List\r\n    dataSource={comments}\r\n    header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\r\n    itemLayout='horizontal'\r\n    renderItem={props => <Comment {...props} />}\r\n  />\r\n)\r\n\r\nconst Editor = ({ onChange, onSubmit, submitting, value }: EditorProps) => (\r\n  <>\r\n    <Form.Item>\r\n      <TextArea rows={4} onChange={onChange} value={value} />\r\n    </Form.Item>\r\n    <Form.Item>\r\n      <Button htmlType='submit' loading={submitting} onClick={onSubmit} type='primary'>\r\n        Add Comment\r\n      </Button>\r\n    </Form.Item>\r\n  </>\r\n)\r\n\r\nexport const AddMessageForm = (props: { onSubmit: (newMessage: string) => void }) => {\r\n  const author = useAppSelector(state => state.auth.login)\r\n  const avatar = useAppSelector(state => state.auth.photo)\r\n  const [comments, setComments] = useState<CommentItem[]>([])\r\n  const [submitting, setSubmitting] = useState(false)\r\n  const [value, setValue] = useState('')\r\n\r\n  const handleSubmit = () => {\r\n    if (!value) return\r\n\r\n    setSubmitting(true)\r\n\r\n    setTimeout(() => {\r\n      setSubmitting(false)\r\n      setValue('')\r\n      setComments([\r\n        ...comments,\r\n        {\r\n          author: author,\r\n          avatar: avatar,\r\n          content: <p>{value}</p>,\r\n          datetime: moment('2022-09-20').fromNow(),\r\n        },\r\n      ])\r\n    }, 200)\r\n  }\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {comments.length > 0 && <CommentList comments={comments} />}\r\n      <Comment\r\n        avatar={<Avatar src={avatar} alt={author} />}\r\n        content={\r\n          <Editor\r\n            onChange={handleChange}\r\n            onSubmit={handleSubmit}\r\n            submitting={submitting}\r\n            value={value}\r\n          />\r\n        }\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport { DialogItem } from './DialogsItms/DialogItems'\r\nimport { Message } from './Messages/Mesages'\r\nimport { AddMessageForm } from './Messages/AddMessageForm'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { addMessageActionCreator } from '../../Redux/dialogsReducer'\r\nimport { useAppDispatch, useAppSelector } from '../../Redux/hooks'\r\n\r\nexport const Dialogs = withAuthRedirect(() => {\r\n  const dialogsData = useAppSelector(state => state.dialogsPage.dialogsData)\r\n  const messagesData = useAppSelector(state => state.dialogsPage.messagesData)\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const onSubmit = (newMessage: string) => {\r\n    dispatch(addMessageActionCreator(newMessage))\r\n  }\r\n\r\n  let dialogElements = dialogsData.map(dialog => (\r\n    <DialogItem linkID={dialog.linkID} userName={dialog.userName} avatarLink={dialog.avatarLink} />\r\n  ))\r\n\r\n  let messageElements = messagesData.map(message => <Message messageText={message.messageText} />)\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <div className={s.dialogList}>{dialogElements}</div>\r\n      <div>\r\n        <div className={s.messageList}>{messageElements}</div>\r\n        <AddMessageForm onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Dialogs\r\n","var map = {\n\t\"./icon01.png\": 5991,\n\t\"./icon02.png\": 725,\n\t\"./icon03.png\": 527,\n\t\"./icon04.png\": 7665,\n\t\"./icon05.png\": 7068,\n\t\"./icon06.png\": 5894,\n\t\"./icon07.png\": 3,\n\t\"./icon08.png\": 2781,\n\t\"./icon09.png\": 1217,\n\t\"./icon10.png\": 1102\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5232;"],"names":["Component","DialogItem","props","className","s","src","require","avatarLink","alt","to","linkID","activeClassName","userName","Message","messageText","TextArea","Input","CommentList","comments","dataSource","header","length","itemLayout","renderItem","Editor","onChange","onSubmit","submitting","value","rows","htmlType","loading","onClick","type","AddMessageForm","author","useAppSelector","state","auth","login","avatar","photo","useState","setComments","setSubmitting","setValue","content","e","target","setTimeout","datetime","moment","fromNow","Dialogs","dialogsData","dialogsPage","messagesData","dispatch","useAppDispatch","dialogElements","map","dialog","messageElements","message","newMessage","addMessageActionCreator","isAuth","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}