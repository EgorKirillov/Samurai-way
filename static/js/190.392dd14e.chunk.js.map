{"version":3,"file":"static/js/190.392dd14e.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Users/UserPage.module.css?4099","webpack://samurai-way/./src/components/Users/user/User.module.css?e9ea","components/Users/user/User.tsx","components/Users/UsersPage.tsx","components/Users/UsersPageConteiner.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersContainer\":\"UserPage_usersContainer__8vozW\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"User_card__0L5Hz\",\"avatar\":\"User_avatar__CD7BF\"};","import React from 'react';\r\nimport s from \"./User.module.css\"\r\nimport userphoto from \"../../../assets/images/user100.png\"\r\nimport {UserType} from \"../../../Redux/usersReducer\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Button, Card} from 'antd';\r\n\r\n\r\nconst {Meta} = Card;\r\n\r\ntype  UserPropsType = {\r\n  user: UserType\r\n  followingIsProgress: Array<number>\r\n  onClickFollowToggle: (id: number, isFollow: boolean) => void\r\n}\r\n\r\nexport const User = ({user, followingIsProgress, onClickFollowToggle}: UserPropsType) => {\r\n  const disabledButton = followingIsProgress.some(id => id === user.id)\r\n  const nameButton = user.followed ? 'unfollow' : 'follow'\r\n  const userPhoto = user.photos.small !== null ? user.photos.small : userphoto\r\n  \r\n  const onClickFollowUnfollow = () => {\r\n    onClickFollowToggle(user.id, !user.followed)\r\n  }\r\n  \r\n  return (\r\n    <Card\r\n      className={s.card}\r\n      extra={<NavLink to={\"/profile/\" + user.id}>More... </NavLink>}\r\n      title={user.name}\r\n      actions={[<Button disabled={disabledButton} onClick={onClickFollowUnfollow}>{nameButton}</Button>]}\r\n    >\r\n      <Meta\r\n        avatar={<img className={s.avatar} alt={\"user.id:\" + user.id} src={userPhoto}/>}\r\n        description={user.status}\r\n      />\r\n    </Card>\r\n  )\r\n};\r\n\r\n","import React from 'react';\r\nimport s from \"./UserPage.module.css\"\r\nimport {changeUsersPerPage, UserType} from \"../../Redux/usersReducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {User} from \"./user/User\";\r\nimport Pagination from 'antd/lib/pagination';\r\nimport {useAppDispatch, useAppSelector} from \"../../Redux/hooks\";\r\n\r\ntype UserPagePropsType = {\r\n  pagesArr: Array<number>\r\n  users: Array<UserType>\r\n  currentUsersPage: number\r\n  totalUsersCount: number\r\n  onClickFollowToggle: (id: number, isFollow: boolean) => void\r\n  onChangeCurrentUsersPage: (n: number) => void\r\n  isFatching: boolean\r\n  followingIsProgress: Array<number>\r\n  toggleFollowInProgress: (isFatchung: boolean, id: number) => void\r\n}\r\n\r\nconst UsersPage = (props: UserPagePropsType) => {\r\n  const countUsersPerPage = useAppSelector(state => state.usersPage.countUsersPerPage)\r\n  const dispatch = useAppDispatch()\r\n  \r\n  const changeUsersPerPageHandler = (currentUsersPage: number = props.currentUsersPage, countUsersPerPage: number) => {\r\n    dispatch(changeUsersPerPage(countUsersPerPage))\r\n    \r\n  }\r\n  \r\n  return (<div className={s.conteiner}>\r\n      {/*<div>{`total count=${props.totalUsersCount}`}</div>*/}\r\n      <Pagination current={props.currentUsersPage}\r\n                  onChange={props.onChangeCurrentUsersPage}\r\n                  total={props.totalUsersCount}\r\n                  showQuickJumper\r\n                  showSizeChanger\r\n                  className={s.paginator}\r\n                  pageSize={countUsersPerPage}\r\n                  pageSizeOptions={[4, 8, 16, 32, 64]}\r\n                  onShowSizeChange={changeUsersPerPageHandler}\r\n                  size={'small'}\r\n                  disabled={false}\r\n      />\r\n      \r\n      <div className={s.usersContainer}>\r\n        {props.isFatching\r\n          ? <Preloader/>\r\n          : props.users.map(u =>\r\n            <User user={u} onClickFollowToggle={props.onClickFollowToggle}\r\n                  followingIsProgress={props.followingIsProgress}/>\r\n          )}\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersPage;","import React, {useEffect} from 'react';\r\nimport {\r\n  changeCurrentPage,\r\n  followToggleUserThunk,\r\n  getUsersThunkCreator,\r\n  toggleFollowInProgress\r\n} from \"../../Redux/usersReducer\";\r\nimport UsersPage from \"./UsersPage\";\r\nimport {useAppDispatch, useAppSelector} from \"../../Redux/hooks\";\r\n\r\n\r\nconst UsersPageContainer = () => {\r\n  const currentUsersPage = useAppSelector(state => state.usersPage.currentUsersPage)\r\n  const totalPagesCount = useAppSelector(state => state.usersPage.totalPagesCount)\r\n  const isFatching = useAppSelector(state => state.usersPage.isFatching)\r\n  const users = useAppSelector(state => state.usersPage.users)\r\n  const totalUsersCount = useAppSelector(state => state.usersPage.totalUsersCount)\r\n  const countUsersPerPage = useAppSelector(state => state.usersPage.countUsersPerPage)\r\n  const followingIsProgress = useAppSelector(state => state.usersPage.followingInProgress)\r\n  \r\n  const dispatch = useAppDispatch()\r\n  \r\n  let pages = []\r\n  for (let i = 1; i <= totalPagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n  \r\n  const followToggleUser = (userid: number, isFollow: boolean) => {\r\n    dispatch(followToggleUserThunk(userid, isFollow))\r\n  }\r\n  const toggleFollowInProgressHandler = (isFatchung: boolean, id: number) => {\r\n    dispatch(toggleFollowInProgress(isFatchung, id))\r\n  }\r\n  const onChangeCurrentUsersPageHandler = (pageNumber: number) => {\r\n    // dispatch(getUsersThunkCreator(pageNumber, countUsersPerPage))\r\n    dispatch(changeCurrentPage(pageNumber))\r\n  }\r\n \r\n  useEffect(() => {\r\n    dispatch(getUsersThunkCreator(currentUsersPage, countUsersPerPage))\r\n  }, [dispatch,currentUsersPage,countUsersPerPage])\r\n  \r\n  return <UsersPage currentUsersPage={currentUsersPage}\r\n                    pagesArr={pages}\r\n                    onChangeCurrentUsersPage={onChangeCurrentUsersPageHandler}\r\n                    users={users}\r\n                    onClickFollowToggle={followToggleUser}\r\n                    totalUsersCount={totalUsersCount}\r\n                    isFatching={isFatching}\r\n                    followingIsProgress={followingIsProgress}\r\n                    toggleFollowInProgress={toggleFollowInProgressHandler}\r\n  />\r\n}\r\nexport default UsersPageContainer"],"names":["Meta","Card","User","user","followingIsProgress","onClickFollowToggle","disabledButton","some","id","nameButton","followed","userPhoto","photos","small","userphoto","className","s","extra","to","title","name","actions","disabled","onClick","avatar","alt","src","description","status","props","countUsersPerPage","useAppSelector","state","usersPage","dispatch","useAppDispatch","current","currentUsersPage","onChange","onChangeCurrentUsersPage","total","totalUsersCount","showQuickJumper","showSizeChanger","pageSize","pageSizeOptions","onShowSizeChange","changeUsersPerPage","size","isFatching","Preloader","users","map","u","totalPagesCount","followingInProgress","pages","i","push","useEffect","getUsersThunkCreator","pagesArr","pageNumber","changeCurrentPage","userid","isFollow","followToggleUserThunk","toggleFollowInProgress","isFatchung"],"sourceRoot":""}