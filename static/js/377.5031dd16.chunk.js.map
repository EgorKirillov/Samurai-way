{"version":3,"file":"static/js/377.5031dd16.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/Profile.module.css?b512","webpack://samurai-way/./src/components/Profile/ProfileInfo/ContactForm/ContactForm.module.css?00f5","components/Profile/ProfileInfo/ContactForm/ContactForm.tsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/photoBlock/AddPhoto/AddPhoto.tsx","components/Profile/ProfileInfo/photoBlock/PhotoBlock.tsx","webpack://samurai-way/./src/components/Profile/ProfileInfo/ContactsBlock/ContactsBlock.module.css?509d","components/Profile/ProfileInfo/ContactsBlock/ContactsBlock.tsx","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/PropfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/post/Post.tsx","components/Profile/MyPosts/post/addPostForm/AddPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__xR5fU\",\"post\":\"Profile_post__IpVDJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"formContact\":\"ContactForm_formContact__rp2WB\",\"formLabel\":\"ContactForm_formLabel__PmlXO\",\"formInput\":\"ContactForm_formInput__Iw6fb\"};","import React from 'react';\r\nimport {UsersContactType} from \"../../../../Redux/profileReducer\";\r\nimport {SubmitHandler, useForm} from 'react-hook-form';\r\nimport Button from 'antd/lib/button/button';\r\nimport s from './ContactForm.module.css'\r\n\r\ntype ContactFormProps = {\r\n  contacts: UsersContactType\r\n  submit: (data: UsersContactType) => void\r\n}\r\n\r\nexport const ContactForm = (props: ContactFormProps) => {\r\n    \r\n    const {register, handleSubmit, watch, formState: {errors}} = useForm<UsersContactType>();\r\n    \r\n    const onSubmit: SubmitHandler<UsersContactType> = (data) => {\r\n      props.submit(data)\r\n    }\r\n    \r\n    return (<div className={s.contactFormContainer}>\r\n        <form className={s.formContact} onSubmit={handleSubmit(onSubmit)}>\r\n          \r\n          <label className={s.formLabel}>vk:</label>\r\n          <input className={s.formInput} defaultValue={props.contacts.vk} {...register(\"vk\")} />\r\n          \r\n          <label className={s.formLabel}>github:</label>\r\n          <input className={s.formInput} defaultValue={props.contacts.github} {...register(\"github\")} />\r\n          \r\n          <label className={s.formLabel}>facebook:</label>\r\n          <input className={s.formInput} defaultValue={props.contacts.facebook} {...register('facebook')}/>\r\n          \r\n          <label className={s.formLabel}>twitter:</label>\r\n          <input className={s.formInput} defaultValue={props.contacts.twitter} {...register(\"twitter\")} />\r\n          \r\n          <label className={s.formLabel}>website:</label>\r\n          <input className={s.formInput} defaultValue={props.contacts.website} {...register(\"website\")} />\r\n          \r\n          <label className={s.formLabel}>instagram:</label>\r\n          <input className={s.formInput} defaultValue={props.contacts.instagram} {...register(\"instagram\")} />\r\n          \r\n          <label className={s.formLabel}>youtube:</label>\r\n          <input className={s.formInput} defaultValue={props.contacts.youtube} {...register(\"youtube\")} />\r\n          \r\n          <label className={s.formLabel}>mainLink:</label>\r\n          <input className={s.formInput} defaultValue={props.contacts.mainLink} {...register(\"mainLink\")} />\r\n          \r\n          <Button htmlType={'submit'}>submit</Button>\r\n        \r\n        </form>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n;\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {updateStatusThunk} from \"../../../Redux/profileReducer\";\r\nimport {useAppDispatch, useAppSelector} from \"../../../Redux/hooks\";\r\n\r\n\r\ntype ProfileStatusProps = {\r\n  isOwner: boolean\r\n}\r\n\r\n\r\nconst ProfileStatusWithHooks = (props: ProfileStatusProps) => {\r\n  \r\n  const statusText = useAppSelector(state => state.profilePage.status)\r\n  const [editMode, setEditMode] = useState<boolean>(false)\r\n  const [status, setStatus] = useState<string>(statusText)\r\n  const dispatch = useAppDispatch()\r\n  \r\n  const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n  \r\n  const activateEditMode = () => {\r\n   if (props.isOwner) setEditMode(true)\r\n    \r\n  }\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    dispatch(updateStatusThunk(status))\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    setStatus(statusText)\r\n  }, [statusText] )\r\n\r\nreturn (\r\n  <span>\r\n    {editMode && props.isOwner?\r\n      <span>\r\n        <input type=\"text\" autoFocus={true} onBlur={deactivateEditMode} value={status} style={{backgroundColor:\"inherit\", border:'none'}}\r\n               onChange={onStatusChange}/>\r\n      </span>\r\n      : <span>\r\n        <span onDoubleClick={activateEditMode}>{statusText || \"--*--\"}</span>\r\n      </span>}\r\n  </span>\r\n);\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, {ChangeEvent, useRef} from 'react';\r\nimport addPhoto from \"../../../../../assets/images/add-photo.png\";\r\nimport {savePhoto} from \"../../../../../Redux/profileReducer\";\r\nimport {useAppDispatch} from \"../../../../../Redux/hooks\";\r\n\r\nexport const AddPhoto = () => {\r\n  \r\n  const inRef = useRef<HTMLInputElement>(null)\r\n  const dispatch = useAppDispatch()\r\n  \r\n  const onClickUploadHandler = () => {\r\n    inRef && inRef.current?.click()\r\n  }\r\n  \r\n  const upload = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files?.length) {\r\n      dispatch(savePhoto(e.target.files[0]))\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <img onClick={onClickUploadHandler} width={'30px'}\r\n           style={{marginLeft: '-30px', position: 'absolute'}}\r\n           color={'inherit'} src={addPhoto} alt={'avatar'}\r\n      />\r\n      <input ref={inRef} type={'file'}\r\n             onChange={upload} accept={'image/*'} style={{display: 'none'}}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport userphoto from \"../../../../assets/images/user300.png\";\r\nimport {Col, Image, Row} from 'antd';\r\nimport ProfileStatusWithHooks from '../ProfileStatusWithHooks';\r\nimport {AddPhoto} from \"./AddPhoto/AddPhoto\";\r\nimport {useAppSelector} from \"../../../../Redux/hooks\";\r\n\r\ntype PhotoBlockType = {\r\n  // profile: UserProfileType\r\n  isOwner: boolean\r\n}\r\n\r\nexport const PhotoBlock = (props: PhotoBlockType) => {\r\n  \r\n  const photoLarge = useAppSelector(state => state.profilePage.userProfile.photos.large)\r\n  const name = useAppSelector(state => state.profilePage.userProfile.fullName)\r\n  const aboutMe = useAppSelector(state => state.profilePage.userProfile.aboutMe)\r\n  const lookingForAJob = useAppSelector(state => state.profilePage.userProfile.lookingForAJob)\r\n  const lookingForAJobDescription = useAppSelector(state => state.profilePage.userProfile.lookingForAJobDescription)\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <Row wrap={false}>\r\n        \r\n        <Col span={5} style={{minWidth: '180px'}}>\r\n          <div>\r\n            <Image\r\n              width={150}\r\n              src={photoLarge || userphoto}\r\n            />\r\n            {props.isOwner && <AddPhoto/>}\r\n          </div>\r\n        </Col>\r\n        \r\n        <Col span={14}>\r\n          {<h1>{name || \"No NAME\"}</h1>}\r\n          {(aboutMe) && <div>About me: {aboutMe}</div>}\r\n          <div>Status: {' '}\r\n            <ProfileStatusWithHooks isOwner={props.isOwner}/>\r\n          </div>\r\n          <div>\r\n            <div>{`I am ${lookingForAJob ? '' : 'not'} looking for a job`}</div>\r\n            {(lookingForAJobDescription) && <div>job status:{' ' + lookingForAJobDescription}</div>}\r\n          </div>\r\n        </Col>\r\n      \r\n      </Row>\r\n    \r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsContainer\":\"ContactsBlock_contactsContainer__O7OG6\",\"contactName\":\"ContactsBlock_contactName__7rdoT\",\"contactValue\":\"ContactsBlock_contactValue__PD1R5\"};","import React from \"react\";\r\nimport s from \"./ContactsBlock.module.css\"\r\nimport {useAppSelector} from \"../../../../Redux/hooks\";\r\n\r\nexport const ContactsBlock = () => {\r\n  \r\n  const vk = useAppSelector(state => state.profilePage.userProfile.contacts.vk)\r\n  const github = useAppSelector(state => state.profilePage.userProfile.contacts.github)\r\n  const facebook = useAppSelector(state => state.profilePage.userProfile.contacts.facebook)\r\n  const twitter = useAppSelector(state => state.profilePage.userProfile.contacts.twitter)\r\n  const website = useAppSelector(state => state.profilePage.userProfile.contacts.website)\r\n  const instagram = useAppSelector(state => state.profilePage.userProfile.contacts.instagram)\r\n  const mainLink = useAppSelector(state => state.profilePage.userProfile.contacts.mainLink)\r\n  const youtube = useAppSelector(state => state.profilePage.userProfile.contacts.youtube)\r\n  \r\n  return (<div className={s.contactsContainer}>\r\n    {vk && <>\r\n        <div className={s.contactName}>vk:</div>\r\n        <div className={s.contactValue}>{vk}</div>\r\n    </>}\r\n    {github && <>\r\n        <div className={s.contactName}>github:</div>\r\n        <div className={s.contactValue}>{github}</div>\r\n    </>}\r\n    {facebook && <>\r\n        <div className={s.contactName}>facebook:</div>\r\n        <div className={s.contactValue}>{facebook}</div>\r\n    </>}\r\n    {twitter && <>\r\n        <div className={s.contactName}>twitter:</div>\r\n        <div className={s.contactValue}>{twitter}</div>\r\n    </>}\r\n    {website && <>\r\n        <div className={s.contactName}>website:</div>\r\n        <div className={s.contactValue}>{website}</div>\r\n    </>}\r\n    {instagram && <>\r\n        <div className={s.contactName}>instagram:</div>\r\n        <div className={s.contactValue}>{instagram}</div>\r\n    </>}\r\n    {youtube && <>\r\n        <div className={s.contactName}>youtube:</div>\r\n        <div className={s.contactValue}>{youtube}</div>\r\n    </>}\r\n    {mainLink && <>\r\n        <div className={s.contactName}>mainLink:</div>\r\n        <div className={s.contactValue}>{mainLink}</div>\r\n    </>}\r\n  </div>)\r\n  \r\n}","// extracted by mini-css-extract-plugin\nexport default {\"contactsTitile\":\"ProfileInfo_contactsTitile__8NxO1\"};","import React, {useState} from 'react';\r\nimport {updateProfile, UpdateProfileType, UsersContactType} from \"../../../Redux/profileReducer\";\r\nimport {ContactForm} from \"./ContactForm/ContactForm\";\r\nimport {Button} from 'antd';\r\nimport {PhotoBlock} from \"./photoBlock/PhotoBlock\";\r\nimport {ContactsBlock} from \"./ContactsBlock/ContactsBlock\";\r\nimport s from './ProfileInfo.module.css'\r\nimport {useAppDispatch, useAppSelector} from \"../../../Redux/hooks\";\r\n\r\ntype ProfileInfoType = { isOwner: boolean }\r\n\r\nexport const PropfileInfo = (props: ProfileInfoType) => {\r\n  \r\n  const profile = useAppSelector(state => state.profilePage.userProfile)\r\n  \r\n  const dispatch = useAppDispatch()\r\n  const [showForm, setShowForm] = useState<boolean>(false)\r\n  \r\n  const openContactsForm = () => {\r\n    setShowForm(true)\r\n  }\r\n  \r\n  const submitContsctForm = (data: UsersContactType) => {\r\n    const updatedProfile: UpdateProfileType = {\r\n      contacts: {...data},\r\n      userId: profile.userId,\r\n      aboutMe: profile.aboutMe,\r\n      lookingForAJob: profile.lookingForAJob,\r\n      lookingForAJobDescription: profile.lookingForAJobDescription,\r\n      fullName: profile.fullName\r\n    }\r\n    setShowForm(false)\r\n    dispatch(updateProfile(updatedProfile))\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <PhotoBlock isOwner={props.isOwner}/>\r\n      <div className={s.contactsTitile}>\r\n        Contacts:\r\n        {props.isOwner && <Button size={'small'} onClick={openContactsForm}>change contacts</Button>}\r\n      </div>\r\n      {!showForm && <ContactsBlock/>}\r\n      {showForm && <ContactForm contacts={profile.contacts} submit={submitContsctForm}/>}\r\n    </div>\r\n  );\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"MyPosts_post__DtY+z\",\"postsBlocks\":\"MyPosts_postsBlocks__dBSS1\"};","import React, {createElement, memo, useState} from \"react\";\r\nimport {MyPostsType} from \"../../../../Redux/profileReducer\";\r\nimport noavatar from '../../../../assets/images/user50.png'\r\nimport {DislikeFilled, DislikeOutlined, LikeFilled, LikeOutlined} from '@ant-design/icons';\r\nimport {useAppSelector} from \"../../../../Redux/hooks\";\r\nimport {Avatar, Comment, Tooltip} from \"antd\";\r\n\r\nexport const Post = memo((props: MyPostsType) => {\r\n  \r\n  const avatar = useAppSelector(state => state.auth.photo)\r\n  const name = useAppSelector(state => state.auth.login)\r\n  const [likes, setLikes] = useState(props.likeCount);\r\n  const [dislikes, setDislikes] = useState(0);\r\n  const [action, setAction] = useState<string | null>(null);\r\n  \r\n  const like = () => {\r\n    setLikes(likes + 1);\r\n    setAction('liked');\r\n  };\r\n  \r\n  const dislike = () => {\r\n    setDislikes(dislikes - 1);\r\n    setAction('disliked');\r\n  };\r\n  \r\n  const actions = [\r\n    <Tooltip key=\"comment-basic-like\" title=\"Like\">\r\n      <span onClick={like} style={{color: '#1890ff'}}>\r\n        {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\r\n        <span className=\"comment-action\">{likes}</span>\r\n      </span>\r\n    </Tooltip>,\r\n    \r\n    <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\r\n      <span onClick={dislike} style={{color: '#1890ff'}}>\r\n        {React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\r\n        <span className=\"comment-action\">{dislikes}</span>\r\n      </span>\r\n    </Tooltip>,\r\n  ];\r\n  \r\n  return (<Comment\r\n    style={{color: 'white'}}\r\n    actions={actions}\r\n    author={<a style={{color: '#1890ff'}} href={''}>{name}</a>}\r\n    avatar={<Avatar src={avatar ? avatar : noavatar} alt={name}/>}\r\n    content={<p> {props.postText}</p>}\r\n    datetime={\r\n      <Tooltip title=\"2016-11-22 11:22:33\" style={{color: 'grey'}}>\r\n        <span>{props.id} hours ago</span>\r\n      </Tooltip>\r\n    }\r\n  />)\r\n  \r\n})","import {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport React from \"react\";\r\nimport Button from \"antd/lib/button\";\r\nimport {useAppSelector} from \"../../../../../Redux/hooks\";\r\n\r\ntype AddPostFormType = {\r\n  postValue: string\r\n};\r\n\r\nexport const AddPostForm = (props: { addPost: (value: string) => void }) => {\r\n  const isAuth = useAppSelector(state => state.auth.isAuth)\r\n  \r\n  const {register,resetField, handleSubmit, watch, formState: {errors,touchedFields}} = useForm<AddPostFormType>();\r\n  \r\n  const onSubmit: SubmitHandler<AddPostFormType> = (data) => {\r\n    console.log(data)\r\n    props.addPost(data.postValue)\r\n    resetField(\"postValue\")\r\n  }\r\n  \r\n  return (<>\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div>\r\n            <textarea\r\n              style={{width:'50%', minWidth:\"250px\", height:'30px',color:\"black\"}}\r\n              \r\n              placeholder={\"new post\"}\r\n              {...register(\"postValue\",\r\n                {\r\n                  required: {value: true, message: \"field required\"},\r\n                  // maxLength: {value: 255, message: \"max 255\"}\r\n                }\r\n              )}\r\n            />\r\n        {errors.postValue && touchedFields && <span>{errors.postValue.message}</span>}\r\n      \r\n      </div>\r\n      <div>\r\n        <Button size={'small'} disabled={!isAuth} htmlType={\"submit\"}> Add new post</Button>\r\n        {!isAuth && <p>only authorized users write posts</p>}\r\n      </div>\r\n    </form>\r\n  </>)\r\n  \r\n}\r\n","import React, {memo, useCallback} from \"react\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport {Post} from \"./post/Post\";\r\nimport {addMyPost} from \"../../../Redux/profileReducer\";\r\nimport {AddPostForm} from \"./post/addPostForm/AddPostForm\";\r\nimport {useAppDispatch, useAppSelector} from \"../../../Redux/hooks\";\r\n\r\nexport const  MyPosts = memo(() => {\r\n    \r\n    const posts = useAppSelector(state => state.profilePage.posts)\r\n    \r\n    const dispatch = useAppDispatch()\r\n    \r\n    const addMyPostHandler = useCallback((newPost:string) => {\r\n        dispatch(addMyPost(newPost))\r\n    },[dispatch])\r\n    \r\n    \r\n    const postsElements = (posts.map(p => <Post key={p.id} id={p.id} postText={p.postText} likeCount={p.likeCount}/>))\r\n    \r\n    return (<div className={s.postsBlocks}>\r\n        <h3>my post</h3>\r\n        <AddPostForm addPost={addMyPostHandler}/>\r\n        <div className={s.post}>\r\n            {postsElements}\r\n        </div>\r\n    </div>)\r\n})\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport s from \"./Profile.module.css\"\r\nimport {PropfileInfo} from \"./ProfileInfo/PropfileInfo\";\r\nimport {setStatusThunk, setUserProfileThunk,} from \"../../Redux/profileReducer\";\r\nimport {useAppDispatch, useAppSelector} from \"../../Redux/hooks\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\n\r\nconst Profile = () => {\r\n  const authID = useAppSelector(state => state.auth.id)\r\n  const params = useParams<{ userId?: string | undefined }>();\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch()\r\n  \r\n  const userId = (params.userId) ? params?.userId : undefined\r\n  //if URL without userId then notOwner profile\r\n  const isOwner = !userId\r\n  \r\n  useEffect(() => {\r\n    if (!!userId) {\r\n      dispatch(setUserProfileThunk(userId))\r\n      dispatch(setStatusThunk(userId))\r\n    } else if (!!authID) {\r\n      dispatch(setUserProfileThunk(authID))\r\n      dispatch(setStatusThunk(authID))\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [userId, authID, dispatch, history])\r\n  \r\n  return <div className={s.content}>\r\n    <PropfileInfo isOwner={isOwner} />\r\n    <MyPosts/>\r\n  </div>\r\n}\r\nexport default Profile;"],"names":["ContactForm","props","useForm","register","handleSubmit","watch","formState","errors","className","s","onSubmit","data","submit","defaultValue","contacts","vk","github","facebook","twitter","website","instagram","youtube","mainLink","htmlType","statusText","useAppSelector","state","profilePage","status","useState","editMode","setEditMode","setStatus","dispatch","useAppDispatch","useEffect","isOwner","type","autoFocus","onBlur","updateStatusThunk","value","style","backgroundColor","border","onChange","e","currentTarget","onDoubleClick","AddPhoto","inRef","useRef","onClick","current","click","width","marginLeft","position","color","src","addPhoto","alt","ref","target","files","length","savePhoto","accept","display","PhotoBlock","photoLarge","userProfile","photos","large","name","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","wrap","span","minWidth","userphoto","ContactsBlock","PropfileInfo","profile","showForm","setShowForm","size","updatedProfile","userId","updateProfile","Post","memo","avatar","auth","photo","login","likeCount","likes","setLikes","dislikes","setDislikes","action","setAction","actions","title","createElement","LikeFilled","LikeOutlined","React","DislikeFilled","DislikeOutlined","author","href","noavatar","content","postText","datetime","id","AddPostForm","isAuth","resetField","touchedFields","console","log","addPost","postValue","height","placeholder","required","message","disabled","MyPosts","posts","addMyPostHandler","useCallback","newPost","addMyPost","postsElements","map","p","authID","params","useParams","history","useHistory","undefined","setUserProfileThunk","setStatusThunk","push"],"sourceRoot":""}